/*
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

syntax = "proto3";
package NES;

/// These messages are for the json serialization of the logical and pipeline plan, which are needed for the
/// visualization of the plans on Conbench.
///
/// The reason, why we decided to still use protobuf as a pre step to the json serialization, is, that we can enforce a certain
/// format for the json, which is otherwise not possible.
/// Furthermore, .proto files are easily extensible

/// The node of a logical plan graph. Depicts a logical operator. A logical plan graph consists of a list of these.
message SerializableLogicalOperatorNode {
  uint32 id = 1;
  repeated uint32 inputs = 2;
  string label = 3;
  string node_type = 4;
  repeated uint32 outputs = 5;
}

/// A pipeline plan consists of pipeline nodes, containing a single pipeline of the plan.
/// A pipeline itself consists of its id and multiple operators in it.
/// Since it is a pipeline, the operators of a pipeline should have at max 1 successor and predecessor.
message PipelineNode {
  message SerializablePhysicalOperatorNode {
    uint32 id = 1;
    repeated uint32 inputs = 2;
    string label = 3;
    repeated uint32 outputs = 4;
  }

  repeated SerializablePhysicalOperatorNode operators = 1;
  uint32 pipeline_id = 2;
  repeated uint32 predecessors = 3;
  repeated uint32 successors = 4;
}

